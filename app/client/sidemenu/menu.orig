define(function (require) {
    var LOGIN = require('../../client/admin/login');
    var MESSAGES = require('../../client/messages/messages');
    var LAYOUTS = require('../../client/mainview/layout');
    var BUILDMENU = require('../sidemenu/buildmenu');
    var UTILS = require('../../client/utils/misc');
    var userdata = {};
    var username = '';

    var toolResponse = function(response,toolname){

    w2popup.open({
        title     : toolname+' Response',
        body      : '<div class="w2ui-centered">'+response.message+'</div>',
        buttons   : '<button class="w2ui-btn" onclick="w2popup.close();">Close</button> ',
        width     : 500,
        height    : 300,
        overflow  : 'hidden',
        color     : '#333',
        speed     : '0.3',
        opacity   : '0.8',
        modal     : true,
        showClose : true,
        showMax   : true
    });


    }

  var refreshMyGrid = function(reloadingGrid,reloadview,reloadobj,refreshparams,refreshrate) {


	UTILS.ajaxPost('getall','userdata',refreshparams,function(opdata){
        	records = opdata.views[reloadview].viewobjects[reloadobj].gridrecords;
		w2ui[reloadingGrid].records = records;
		w2ui[reloadingGrid].refresh();	
        })
	setTimeout(function(){refreshMyGrid(reloadingGrid,reloadview,reloadobj,refreshparams,refreshrate);},refreshrate);
  }
    

    var gridtemplate = { 
        name: 'gridtemplate', 
        header: 'List of Names',
        show: {
            header         : true,
            toolbar     : true,
            footer        : true,
            selectColumn: true,
        },        
	toolbar: {
		items:[],
		onClick: function(event){
		}
	},
	menu: [
	],
	onMenuClick: function(event){
		selrecords = this.get(this.getSelection());
		toolprogram = event.menuItem.program;
		everyrow = event.menuItem.everyrow;
		toolfields = event.menuItem.toolfields;
		launchurl = event.menuItem.launchurl;
		tooltype = event.menuItem.tooltype;
		toolname = event.menuItem.text;

		params = {
			"toolprogram":toolprogram,
			"selrecords":selrecords,
			"everyrow":everyrow,
			"toolfields":toolfields
			}

		if (tooltype == 'Program') {
		UTILS.ajaxPost('firetool','toolexecute',params,function(response){
			toolResponse(response,toolname);
                });
		} else if (tooltype == 'URL') {
		window.open(launchurl);
		}

	},
	columns: [
        ],
	records: [
    	]
    }

    

    var updateSideMenu = function(data){

	console.log(data);
	var sidebarobj = w2ui.sidebar;
	
	for (var prop in data.views) {	
		id = data.views[prop].nocviewname;	
		title = data.views[prop].title;
		var nodeexist = w2ui.sidebar.get('myviewsmenu', id);
		if (nodeexist == null) {
		menutoadd = {id: id, text: title};
		sidebarobj.add('myviewsmenu', menutoadd);
		sidebarobj.refresh();
		}
	}

    }

    var setContent = function(layout, view){
                w2ui.layoutmain.content('main',layout);
                viewobj = view.viewobjects;
		for (var prop in viewobj) {
			panel = prop.substring(0, prop.length - 5);
			if (viewobj[prop].objtype == 'html') {
				content =  viewobj[prop].objmarkup;
				layout.content(panel,content);
			}
			if (viewobj[prop].objtype == 'chart') {
				var charttype = viewobj[prop].charttype;
				var objname = viewobj[prop].objname;
				content = '<div class="hide-scroll-bars"><iframe class="chart-frame-content" src="html/nhcpages/php/'+charttype+'.php?charttype='+charttype+'&objname='+objname+'" style="height: 100%; width: 100%;"></iframe></div>';
				layout.content(panel,content);
			}
			if (viewobj[prop].objtype == 'grid') {
				var temp = gridtemplate;
				var gridname = view.nocviewname+'_'+prop+'_grid';
				var header = viewobj[prop].objname;
				var menu = typeof viewobj[prop].menus !== 'undefined' ? (typeof viewobj[prop].menus.contextmenu !== 'undefined' ? viewobj[prop].menus.contextmenu : []) : [];
				var toolbar = typeof viewobj[prop].menus !== 'undefined' ? (typeof viewobj[prop].menus.toolbarmenu !== 'undefined' ? viewobj[prop].menus.toolbarmenu : []) : [];
				var columns = viewobj[prop].gridcolumns;
				//var gridrecords = viewobj[prop].gridrecords;
				gridtemplate.name = gridname;
				gridtemplate.header = header;
				gridtemplate.menu = menu;
				gridtemplate.columns = columns;
				gridtemplate.onRender = function(event) {
					var reloadingGrid = this.name;
					var reloadview = reloadingGrid.split("_")[0];
					var reloadobj = reloadingGrid.split("_")[1];
					event.onComplete = function(){
					w2ui[reloadingGrid].refresh();	
                                        refreshparams = {
                                                 "username" : username,
                                                 "refreshview" : reloadview,
                                                 "refreshobj" : reloadobj
                                         	 }
					UTILS.ajaxPost('getall','userdata',refreshparams,function(opdata){
                                       		var refreshrate = opdata.views[reloadview].viewobjects[reloadobj].refreshrate;
						refreshrate = refreshrate * 1000;

						if (refreshrate > 0) {
						setTimeout(function(){refreshMyGrid(reloadingGrid,reloadview,reloadobj,refreshparams,refreshrate);}, refreshrate);
						}
                                        })

							
					}

				}
				
				var tools = [];
				toolbar.forEach(function(tool){
					tool['type'] = 'button';
					tool['caption'] = tool.text;
					tool['img'] = tool.icon;
					tools.push(tool);
				});
				gridtemplate.toolbar.items = tools;

				gridtemplate.toolbar.onClick = function(event){
					var reloadingGrid = this.owner.name;
					var reloadview = reloadingGrid.split("_")[0];
					var reloadobj = reloadingGrid.split("_")[1];

                		        if (event.target == 'w2ui-reload') {
						params = {
							"username" : username,
							"refreshview" : reloadview,
							"refreshobj" : reloadobj
						}
						UTILS.ajaxPost('getall','userdata',params,function(opdata){
						w2ui[reloadingGrid].records = opdata.views[reloadview].viewobjects[reloadobj].gridrecords;
						w2ui[reloadingGrid].refresh();

                                		})
                        		}
				}

				var reloadview = gridname.split("_")[0];
                                var reloadobj = gridname.split("_")[1];
				var refreshinitparams = {
							"username":username,
							"refreshview":reloadview,
							"refreshobj":reloadobj
						}

				gridtemplate.records = [];
				if (typeof w2ui[gridname] === "object") {
					w2ui[gridname].destroy()
					content =  $().w2grid(gridtemplate)
					layout.content(panel,content);
					UTILS.ajaxPost('getall','userdata',refreshinitparams,function(opdata){
						records = opdata.views[reloadview].viewobjects[reloadobj].gridrecords;
						w2ui[gridname].records = records;
						w2ui[gridname].refresh();
					});
				} else {
					content =  $().w2grid(gridtemplate)
					layout.content(panel,content);
					UTILS.ajaxPost('getall','userdata',refreshinitparams,function(opdata){
						records = opdata.views[reloadview].viewobjects[reloadobj].gridrecords;
						w2ui[gridname].records = records;
						w2ui[gridname].refresh();
					});
				}

			}
			if (viewobj[prop].objtype == 'iframe') {
				content = '<div><iframe src="'+viewobj[prop].objurl+'" style="height: 100%; width: 100%;"></iframe></div>'
				layout.content(panel,content);
			}
		}
    }

    var configLayout = function(event){
	viewname = event.target;
	for (var prop in userdata.views) {
		var view = userdata.views[prop];
		if (view.nocviewname == viewname) {
			if (view.canvasname == 'main') {
                           if (w2ui.main) { w2ui.main.destroy() }
			    $().w2layout(LAYOUTS.main);
                            setContent(w2ui.main, view);
                        }
			if (view.canvasname == 'topmain') {
			   if (w2ui.topmain) { w2ui.topmain.destroy() }
			    $().w2layout(LAYOUTS.topmain(view.topsize, view.mainsize));
			    setContent(w2ui.topmain, view);
			}
			if (view.canvasname == 'topmainbottom') {
			   if (w2ui.topmainbottom) { w2ui.topmainbottom.destroy() }
			    $().w2layout(LAYOUTS.topmainbottom(view.topsize, view.mainsize, view.bottomsize));
			    setContent(w2ui.topmainbottom, view);
			}
			if (view.canvasname == 'leftmain') {
			   if (w2ui.leftmain) { w2ui.leftmain.destroy() }
			    $().w2layout(LAYOUTS.leftmain(view.leftsize, view.mainsize));
			    setContent(w2ui.leftmain, view);
			}
			if (view.canvasname == 'rightmain') {
			   if (w2ui.rightmain) { w2ui.rightmain.destroy() }
			    $().w2layout(LAYOUTS.rightmain(view.rightsize, view.mainsize));
			    setContent(w2ui.rightmain, view);
			}
			if (view.canvasname == 'leftmainright') {
			   if (w2ui.leftmainright) { w2ui.leftmainright.destroy() }
			    $().w2layout(LAYOUTS.leftmainright(view.leftsize, view.mainsize, view.rightsize));
			    setContent(w2ui.leftmainright, view);
			}
			if (view.canvasname == 'topmainright') {
			   if (w2ui.topmainright) { w2ui.topmainright.destroy() }
			    $().w2layout(LAYOUTS.topmainright(view.topsize, view.mainsize, view.rightsize));
			    setContent(w2ui.topmainright, view);
			}
			if (view.canvasname == 'topmainleft') {
			   if (w2ui.topmainleft) { w2ui.topmainleft.destroy() }
			    $().w2layout(LAYOUTS.topmainleft(view.topsize, view.mainsize, view.leftsize));
			    setContent(w2ui.topmainleft, view);
			}
			if (view.canvasname == 'topleftmainbottom') {
			   if (w2ui.topleftmainbottom) { w2ui.topleftmainbottom.destroy() }
			    $().w2layout(LAYOUTS.topleftmainbottom(view.topsize, view.leftsize, view.mainsize, view.bottomsize));
			    setContent(w2ui.topleftmainbottom, view);
			}
			if (view.canvasname == 'toprightmainpreview') {
			   if (w2ui.toprightmainpreview) { w2ui.toprightmainpreview.destroy() }
			    $().w2layout(LAYOUTS.toprightmainpreview(view.topsize, view.rightsize, view.mainsize, view.previewsize));
			    setContent(w2ui.toprightmainpreview, view);
			}
			if (view.canvasname == 'topleftmainpreview') {
			   if (w2ui.topleftmainpreview) { w2ui.topleftmainpreview.destroy() }
			    $().w2layout(LAYOUTS.topleftmainpreview(view.topsize, view.leftsize, view.mainsize, view.previewsize));
			    setContent(w2ui.topleftmainpreview, view);
			}
			if (view.canvasname == 'toprightmainpreviewbottom') {
			   if (w2ui.toprighttmainpreviewbottom) { w2ui.toprightmainpreviewbottom.destroy() }
			    $().w2layout(LAYOUTS.toprightmainpreviewbottom(view.topsize, view.rightsize, view.mainsize, view.previewsize, view.bottomsize));
			    setContent(w2ui.toprightmainpreviewbottom, view);
			}
			if (view.canvasname == 'topleftmainpreviewbottom') {
			   if (w2ui.toplefttmainpreviewbottom) { w2ui.topleftmainpreviewbottom.destroy() }
			    $().w2layout(LAYOUTS.topleftmainpreviewbottom(view.topsize, view.leftsize, view.mainsize, view.previewsize, view.bottomsize));
			    setContent(w2ui.topleftmainpreviewbottom, view);
			}
			if (view.canvasname == 'all') {
			   if (w2ui.all) { w2ui.all.destroy() }
			    $().w2layout(LAYOUTS.all(view.topsize, view.leftsize, view.rightsize, view.mainsize, view.previewsize, view.bottomsize));
			    setContent(w2ui.all, view);
			}
	

		}
	}
	
    }

    return {
        sidebar: {
                name       : 'sidebar',
                topHTML    : '<div id="nocherologo"><img id="nocheroicon" src="libs/css/images/virtuops.png"></img><div id="nocherotext">NOC Hero&trade;<br>Commander</div></div>',
                onRender: function(event) {
			event.onComplete = function(){
		        var sessionID = UTILS.getsessionid('PHPSESSID');
			UTILS.getusername(sessionID, function(data){
				username = data.records[0].username;
				var userobj = {
				       username: username 
				}

				BUILDMENU.buildsidebar(userobj);
				UTILS.ajaxPost('getall','userdata',{"username":username,"objdata":"no"},function(opdata){
					userdata = opdata;
					updateSideMenu(opdata);
				})
			    })
			}
                },
                onClick: function (event) {
                    //var sidebar = this;
                    switch (event.target) {
                        case 'connections':
                            w2ui.layoutmain.content('main',w2ui.layout7030);
                            w2ui.layout7030.content('main',w2ui.connectionform);
                            w2ui.layout7030.content('right',w2ui.connectiongrid);
                            setTimeout(function(){w2ui.connectionform.refresh();}, 400);
                            break;
                        case 'datasets':
                            w2ui.layoutmain.content('main',w2ui.layout7030);
                            w2ui.layout7030.content('main',w2ui.datasetform);
                            w2ui.layout7030.content('right',w2ui.datasetgrid);
                            setTimeout(function(){w2ui.datasetform.refresh();}, 400);
                            break;
                        case 'helpabout':
                            MESSAGES.helpabout();
                            break;
                        case 'intro':
                            w2ui.layoutmain.content('main',w2ui.layoutsingle);
                            w2ui.layoutsingle.load('main','html/docs/intro.php');
                            break;
                        case 'documentation':
				/*
                            w2ui.layoutmain.content('main',w2ui.layoutsingle);
                            w2ui.layoutsingle.load('main','html/docs/docmain.html');
				*/
                            break;
                        case 'users':
                            w2ui.layoutmain.content('main',w2ui.layout2080);
                            w2ui.layout2080.content('top',w2ui.usertopgrid);
                            w2ui.layout2080.content('main',w2ui.userbottomform);
                            break;
                        case 'groups':
                            w2ui.layoutmain.content('main',w2ui.layout2080);
                            w2ui.layout2080.content('top',w2ui.grouptopgrid);
                            setTimeout(function() { w2ui.grouptopgrid.refresh() }, 50)
                            w2ui.layout2080.content('main',w2ui.groupbottomform);
                            setTimeout(function(){
                                //wait for groupbottomform to come up.
                                w2ui.gbfavailablemembers.render($('#gbfavailablemembers')[0]);
                                w2ui.gbfavailablemembers.refresh();
                                w2ui.gbfselectedmembers.render($('#gbfselectedmembers')[0])
                                w2ui.gbfselectedmembers.refresh();}, 1500
                                );
                            break;
                        case 'settings':
                            w2ui.layoutmain.content('main',w2ui.layoutsingle);
                            w2ui.layoutsingle.content('main',w2ui.settingsbottomform);
                            break;
                        case 'adminwizard':
				/*
                            w2ui.layoutmain.content('main',w2ui.layoutsingle);
                            w2ui.layoutsingle.content('main',w2ui.adminwizard);
				*/
                            break;
                        case 'tools':
                            w2ui.layoutmain.content('main',w2ui.layout7030);
                            w2ui.layout7030.content('main',w2ui.toolform);
                            w2ui.layout7030.content('right',w2ui.toolgrid);
                            setTimeout(function(){w2ui.toolform.refresh();}, 400);
                            break;
                        case 'menus':
                            w2ui.layoutmain.content('main',w2ui.layout7030);
                            w2ui.layout7030.content('main',w2ui.menuform);
                            w2ui.layout7030.content('right',w2ui.menugrid);
                            setTimeout(function(){w2ui.menuform.refresh();}, 400);
                            break;
                        case 'viewobjects':
                            w2ui.layoutmain.content('main',w2ui.layout7030);
                            w2ui.layout7030.content('main',w2ui.viewobjectform);
                            w2ui.layout7030.content('right',w2ui.viewobjectgrid);
                            setTimeout(function(){w2ui.viewobjectform.refresh();}, 400);
                            break;
                        case 'views':
                            w2ui.layoutmain.content('main',w2ui.layout7030);
                            w2ui.layout7030.content('main',w2ui.viewform);
                            w2ui.layout7030.content('right',w2ui.viewgrid);
                            setTimeout(function(){w2ui.viewform.refresh();}, 400);
                            break;
                        case 'logout':
                            window.location = 'logout.php'
                            break
			default:
				configLayout(event);
                        }
                },

        },
        init: function(){
        w2ui.layoutmain.content('left', $().w2sidebar(this.sidebar));
        }
    };
});

