<!DOCTYPE html>
<HTML>
<HEAD><meta name="viewport" content="width=device-width, initial-scale=1">
<Title>Black Vertical Bar Meters</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector 6.1 (PHP Edition)</p>
<p class="heading1">Black Vertical Bar Meters</p>
<hr class="separator">
<div class="content">
<img src="images/blackvbarmeter0.png">&nbsp;&nbsp;<img src="images/blackvbarmeter1.png">&nbsp;&nbsp;<img src="images/blackvbarmeter2.png">&nbsp;&nbsp;<img src="images/blackvbarmeter3.png">&nbsp;&nbsp;<img src="images/blackvbarmeter4.png">&nbsp;&nbsp;<img src="images/blackvbarmeter5.png">
<br><br>
This example demonstrates vertical bar meters in a black coloring scheme, and with bars in various shading styles.
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[File: phpdemo/blackvbarmeter.php]</b>
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>&lt;?php
require_once("../lib/phpchartdir.php");

# This script can draw different charts depending on the chartIndex
$chartIndex = (int)($_REQUEST["img"]);

# The value to display on the meter
$value = 66.77;

# Create a LinearMeter object of size 70 x 260 pixels with black background and rounded corners
$m = new LinearMeter(70, 260, 0x000000);
$m-&gt;setRoundedFrame(Transparent);

# Set the default text and line colors to white (0xffffff)
$m-&gt;setColor(TextColor, 0xffffff);
$m-&gt;setColor(LineColor, 0xffffff);

# Set the scale region top-left corner at (36, 30), with size of 20 x 196 pixels. The scale labels
# are located on the left (default - implies vertical meter).
$m-&gt;setMeter(36, 30, 20, 196);

# Set meter scale from 0 - 100, with a tick every 10 units
$m-&gt;setScale(0, 100, 10);

# Add the chart title at the top center
$title = $m-&gt;addText($m-&gt;getWidth() / 2, 5, "Temp C", "arialbd.ttf", 8, TextColor, TopCenter);

# Move the scale labels 8 pixels from the meter scale to make room for the color scale
$m-&gt;setLabelPos(false, 8);

# Demostrate different types of color scales
$smoothColorScale = array(0, 0x0000ff, 25, 0x0088ff, 50, 0x00ff00, 75, 0xdddd00, 100, 0xff0000);
$stepColorScale = array(0, 0x00dd00, 50, 0xffff00, 80, 0xff0000, 100);
$highLowColorScale = array(0, 0x0000ff, 40, Transparent, 60, Transparent, 100, 0xff0000);
$highColorScale = array(70, Transparent, 100, 0xff0000);

if ($chartIndex == 0) {
    # Add a blue (0x0088ff) bar from 0 to value with glass effect and 4 pixel rounded corners
    $m-&gt;addBar(0, $value, 0x0088ff, glassEffect(NormalGlare, Left), 4);
    # Add a 4-pixel thick smooth color scale at x = 29 (left of meter scale)
    $m-&gt;addColorScale($smoothColorScale, 29, 4);
} else if ($chartIndex == 1) {
     # Add a yellow (0xCC9922) bar from 0 to value with bar lighting effect
    $m-&gt;addBar(0, $value, 0xcc9922, barLighting());
    # Add a 4-pixel thick smooth color scale at x = 29 (left of meter scale)
    $m-&gt;addColorScale($smoothColorScale, 29, 4);

    # Set the title style to black text on a yellow (0xcc9922) background with rounded corners
    $title-&gt;setFontColor(0x000000);
    $title-&gt;setBackground(0xcc9922);
    $title-&gt;setRoundedCorners(2);
} else if ($chartIndex == 2) {
     # Add a grey (0xaaaaaa) bar from 0 to value with bar lighting effect
    $m-&gt;addBar(0, $value, 0xaaaaaa, barLighting());
    # Add a 4-pixel high/low color scale at x = 29 (left of meter scale)
    $m-&gt;addColorScale($highLowColorScale, 29, 4);
} else if ($chartIndex == 3) {
     # Add a brown (0xbb6622) bar from 0 to value with cylinder lighting effect
    $m-&gt;addBar(0, $value, 0xbb6622, cylinderEffect());
    # Add a 4 pixel thick brown (0xbb6622) frame
    $m-&gt;setThickFrame(4, 0xbb6622);
    # Add a high only color scale at x = 29 (left of meter scale)
    $m-&gt;addColorScale($highColorScale, 29, 4);
} else if ($chartIndex == 4) {
    # Add a purple (0x7755ee) bar from 0 to value
    $m-&gt;addBar(0, $value, 0x7755ee);
    # Add a 4 pixel thick purple (0x880088) frame
    $m-&gt;setThickFrame(4, 0x880088);
    # Add a 4-pixel high/low color scale at x = 29 (left of meter scale)
    $m-&gt;addColorScale($highLowColorScale, 29, 4);
} else {
     # Add a green (0x00bb00) bar from 0 to value with soft lighting effect and 4 pixel rounded
     # corners
    $m-&gt;addBar(0, $value, 0x00bb00, softLighting(), 4);
    # Add a 4-pixel step color scale at x = 29 (left of meter scale)
    $m-&gt;addColorScale($stepColorScale, 29, 4);
}

# Add a text box at the bottom-center. Display the value using white (0xffffff) 8pt Arial Bold font
# on a black (0x000000) background with depressed grey (0x333333) rounded border.
$t = $m-&gt;addText($m-&gt;getWidth() / 2, $m-&gt;getHeight() - 7, $m-&gt;formatValue($value, "2"),
    "arialbd.ttf", 8, 0xffffff, BottomCenter);
$t-&gt;setBackground(0x000000, 0x333333, -1);
$t-&gt;setRoundedCorners(3);

# Output the chart
header("Content-type: image/png");
print($m-&gt;makeChart2(PNG));
?&gt;</pre></td></tr></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2017 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
